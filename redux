数据持久化

import { createStore, compose, applyMiddleware } from'redux'

import thunk from'redux-thunk'

import { persistReducer } from'redux-persist'

import storage from'redux-persist/lib/storage'

import { createStore, compose, applyMiddleware } from 'redux'
import thunk from 'redux-thunk'
import { persistReducer } from 'redux-persist'
import storage from 'redux-persist/lib/storage'
import promise from 'redux-promise'
import com from './reduce/index'//引入reduce/index文件，起别名
const persistConfig = {
	key: 'root',
	storage,
}
//数据持久化
const persistedReducer = persistReducer(persistConfig, com)


const composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;
const store = createStore(
	persistedReducer,
	composeEnhancers(applyMiddleware(promise, thunk))
)
export { store }

//reduce

const initlogin = {
    username:'',
    password:'',
    remember:false,
    dataTable:[
    ],
}


export default function login (state = initlogin,action){
    // console.log(action)
    switch (action.type) {
        case 'LOGIN':
            return { ...state,}
        case 'SAVE':
            return { ...state, ...action.payload}
        case 'TABLE_DATA':
            return { ...state, dataTable: action.payload }
        default:
            return state
    }
}


//reduce抛出页面

import login from'./login'

import home from'./home'

import { combineReducers } from'redux'

const com = combineReducers({

login,

home, 

goods

})

export default com


//调用方法action


import request from '../utils/request'
import {get} from '../utils/request'

//login
export function fetchLogin (options) {
    return {
      type: 'LOGIN',
      payload: request('/api/user/login', options),
      
    }
  }
export function remeber (options) {
  // console.log(options)
    return {
      type: 'SAVE',
      payload:options
    }
  }
export function getData () {
    return {
      type: 'TABLE_DATA',
      payload: get('/api/banner/list')
    }
  }
