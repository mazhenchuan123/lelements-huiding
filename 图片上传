<Form.Item label="上传图片">
    {getFieldDecorator('upload', {
        valuePropName: 'fileList',
        getValueFromEvent: this.normFile,
    })(
        <Upload name="file" action="api/uploadFile" listType="picture"> //name是后台提供的
            <Button>
                <Icon type="upload" /> 点击上传
            </Button>
        </Upload>,
    )}
</Form.Item>

bannerUrl: values.upload[0].response.data.url  //获取路径

render() {
        const { title } = this.props
        const { getFieldDecorator } = this.props.form
        const formItemLayout = {
            labelCol: { span: 6 },
            wrapperCol: { span: 14 },
        };

        return (
            <div className='model'>
                <Button
                    type="primary"
                    onClick={this.props.showModal}
                >
                    添加
                </Button>

                <Modal
                    title={title}
                    visible={this.props.visible}
                    onCancel={this.props.handleCancel}
                    footer={null}
                >
                    <Form {...formItemLayout} onSubmit={this.handleSubmit}>
                        <Form.Item label="标题">
                            {getFieldDecorator('title', {
                                rules: [{ required: true, message: '请输入标题' }],
                            })(<Input />)}
                        </Form.Item>

                        <Form.Item label="上传图片">
                            {getFieldDecorator('upload', {
                                valuePropName: 'fileList',
                                getValueFromEvent: this.normFile,
                            })(
                                <Upload name="file" action="api/uploadFile" listType="picture">
                                    <Button>
                                        <Icon type="upload" /> 点击上传
                                    </Button>
                                </Upload>,
                            )}
                        </Form.Item>

                        <Form.Item label="排序">
                            {getFieldDecorator('sort')(<InputNumber />)}
                        </Form.Item>

                        <Form.Item label="状态">
                            {getFieldDecorator('status', {})(
                                <Radio.Group>
                                    <Radio value={0}>禁用</Radio>
                                    <Radio value={1}>启用</Radio>
                                </Radio.Group>,
                            )}
                        </Form.Item>

                        <Form.Item label="描述信息">
                            {getFieldDecorator('mark')(
                                <Input.TextArea rows={4} />
                            )}
                        </Form.Item>

                        <Form.Item wrapperCol={{ span: 12, offset: 6 }}>
                            <Button type="primary" htmlType="submit">
                                {this.props.clickName}
                            </Button>
                            <Button onClick={this.handleReset} style={{ marginLeft: 10 }}>
                                重置
                            </Button>
                        </Form.Item>
                    </Form>
                </Modal>
            </div>
        );
    }
